#version 460
#extension GL_EXT_ray_tracing : enable
#extension GL_GOOGLE_include_directive : enable

#include "includes.glsl"

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = 1, set = 0, rgba8) uniform image2D image;
layout(binding = 2, set = 0) uniform CameraProperties 
{
	mat4 viewInverse;
	mat4 projInverse;
	uint frameIndex;
} cam;

layout(location = 0) rayPayloadEXT hitPayload hitValue;

#include "shootRay.glsl"

void main() 
{
	const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
	const vec2 inUV = pixelCenter/vec2(gl_LaunchSizeEXT.xy);
	vec2 d = inUV * 2.0 - 1.0;

    uint seed = initialSeed(gl_LaunchIDEXT.x * cam.frameIndex, gl_LaunchIDEXT.y * cam.frameIndex, 16);

	vec4 origin = cam.viewInverse * vec4(0,0,0,1);
	vec4 target = cam.projInverse * vec4(d.x, d.y, 1, 1) ;
	vec4 direction = cam.viewInverse*vec4(normalize(target.xyz / target.w), 0);

    colorRay(origin.xyz, direction.xyz, seed, 0);

	imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(clamp(hitValue.color, 0.0, 1.0), 0.0));
}
